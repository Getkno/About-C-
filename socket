using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Client
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        Socket socket;
        private void btnStart_Click(object sender, EventArgs e)
        {
            //在客户端创建跟服务端通信的Socket
            socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            //让socket连接服务端
            IPAddress ip = IPAddress.Parse(txtServer.Text);
            IPEndPoint point = new IPEndPoint(ip, Convert.ToInt32(txtPort.Text));
            //连接
            socket.Connect(point);

            ShowMsg("连接成功");
            //为了避免窗体卡死 创建一个线程来不停的接收服务器发送过来的消息
            Thread th = new Thread(ReciveMsg);
            th.IsBackground = true;
            th.Start();
            
        }

        /// <summary>
        /// 客户端接收服务端发来的消息
        /// </summary>
        void ReciveMsg()
        {
            while (true)
            {
                try
                {
                    byte[] buffer = new byte[1024 * 1024 * 3];
                    //获得传送过来的字节数组的第一位 0 1 2 

                    int r= socket.Receive(buffer);

                    byte b = buffer[0];
                    //发送的文字
                    if (b == 0)
                    {
                        string str = Encoding.UTF8.GetString(buffer, 1, r - 1);
                        ShowMsg(str);
                    }
                    //发送的文件
                    else if (b == 1)
                    {
                        SaveFileDialog sfd = new SaveFileDialog();
                        sfd.Title = "请选择要保存的文件的路径";
                        sfd.Filter = "所有文件|*.*";
                        sfd.InitialDirectory = @"C:\Users\SpringRain\Desktop";
                        sfd.ShowDialog(this);
                        string path = sfd.FileName;
                        //把发送过来的文件保存在这个路径下
                        using (FileStream fsWrite = new FileStream(path, FileMode.OpenOrCreate, FileAccess.Write))
                        {
                            fsWrite.Write(buffer, 1, r - 1);
                        }
                        MessageBox.Show("保存成功");
                    }
                    //发送的震动
                    else if (b == 2)
                    {
                        ZD();
                    }
                }
                catch { }
            }

        }



        void ShowMsg(string str)
        {
            txtLog.AppendText(str + "\r\n");
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            Control.CheckForIllegalCrossThreadCalls = false;
        }


        void ZD()
        {
            for (int i = 0; i < 1000; i++)
            {
                this.Location = new Point(300, 300);
                this.Location = new Point(350, 350);
            }
        }


        /// <summary>
        /// 客户端给服务器端发送信息
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnSend_Click(object sender, EventArgs e)
        {
            string msg = txtMsg.Text.Trim();
            byte[] buffer = Encoding.UTF8.GetBytes(msg);
            socket.Send(buffer);
            Thread.Sleep(500);
            //Thread th = new Thread(ReciveMsg);
            //th.IsBackground = true;
            //th.Start();
            
        }
    }
}
