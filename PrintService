using System;
using System.Collections.Generic;
using System.Data;
using System.Drawing;
using System.Drawing.Printing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace PrintTest
{
    public class PrintService
    {
        public PrintService()
        { 
        
        }
        public String printName = String.Empty;
        public Font prtTextFont = new Font("宋体", 16);
        public Font prtTitleFont = new Font("宋体", 16);
        private string[] titles = new String[0];
        public string[] Titles
        {
            set
            {
                titles = value as string[];
                if (null == titles)
                {
                    titles = new string[0];
                }
            }
            get
            {
                return titles;
            }
        }
        private Int32 left = 20;
        private Int32 top = 20;
        public Int32 Top { set { top = value; } get { return top; } }
        public Int32 Left { set { left = value; } get { return left; } }
        private DataTable printedTable;
        private Int32 pHeight;
        private Int32 pWidth;
        private Int32 pIndex;
        private Int32 curdgi;
        private Int32[] width;
        private Int32 rowOfDownDistance = 3;
        private Int32 rowOfUpDistance = 2;
        Int32 startColumnControls = 0;
        Int32 endColumnControls = 0;
        /// <summary>
        /// 打印数据集
        /// </summary>
        /// <param name="table">数据集</param>
        /// <returns></returns>
        public Boolean PrintDataTable(DataTable table)
        {
            PrintDocument prtDocument = new PrintDocument();
            try
            {
                if (printName != String.Empty)
                {
                    prtDocument.PrinterSettings.PrinterName = printName;
                }
                //prtDocument.DefaultPageSettings.Landscape = true;//设置横向打印
                prtDocument.OriginAtMargins = false;
                //PrintDialog prtDialog = new PrintDialog();
                //prtDialog.Document = prtDocument;
                //if (DialogResult.OK != prtDialog.ShowDialog())
                //{
                //    return false;
                //}
                printedTable = table;
                pIndex = 0;
                curdgi = 0;
                width = new Int32[printedTable.Columns.Count];
                pHeight = prtDocument.PrinterSettings.DefaultPageSettings.Bounds.Bottom + 400;
                pWidth = prtDocument.PrinterSettings.DefaultPageSettings.Bounds.Right;
                prtDocument.PrintPage += new PrintPageEventHandler(docToPrint_PrintPage);
                //PrintPreviewDialog printView = new PrintPreviewDialog();//打印预览对话框
                //printView.Document = prtDocument;
                //printView.ShowDialog();
                prtDocument.Print();
            }
            catch 
            {
                MessageBox .Show ("打印出错");
            }
            prtDocument .Dispose ();
            return true ;
            }

        /// <summary>
        /// 设置打印机开始打印的事件处理函数
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="ev"></param>
        private void docToPrint_PrintPage(object sender,PrintPageEventArgs ev)
        {
            Int32 X=left ;
            Int32 y=top;
            Int32 rowOfTop=top;
            Int32 i;
            Pen pen=new Pen (Brushes.Black ,1);
            if(0==pIndex )
            {
                for (i = 0; i < titles .Length; i++)
			    {
			        ev.Graphics .DrawString (titles [i],prtTitleFont ,Brushes.Black ,left ,y+rowOfUpDistance);
                    y+=prtTextFont .Height +rowOfDownDistance ;
			    }
                rowOfTop =y;
                foreach (DataRow dr in printedTable .Rows )
                {
                    for (i = 0; i < printedTable .Columns .Count; i++)
			        {
			            Int32 colWidth=Convert.ToInt16 (ev.Graphics .MeasureString (dr[i].ToString ().Trim (),prtTextFont).Width);
                        if(colWidth >width [i])
                        {
                            width[i]=colWidth ;
                        }
			        }
                }
            }
            endColumnControls = 0;

            for ( i = endColumnControls ; i < printedTable .Columns .Count; i++)
			{
			    String headtext=printedTable .Columns [i].ColumnName .Trim ();
                if(pIndex ==0)
                {
                     int colwidth=Convert .ToInt16 (ev.Graphics .MeasureString (headtext ,prtTextFont ).Width );
                    if(colwidth >width [i])
                    {
                        width [i]=colwidth ;
                    }
                }
                if(X+width [i]>pHeight )
                {
                    break ;
                }
                ev.Graphics .DrawString (headtext ,prtTextFont ,Brushes .Black ,X,y+rowOfUpDistance );
                X+=width [i];
			}
            //rowOfUpDistance+=prtTextFont.Height;
            ev.Graphics.DrawLine(pen, left, y, X, y);
            startColumnControls =endColumnControls ;
            if(i<printedTable .Columns .Count )
            {
                 endColumnControls =i;
                ev.HasMorePages =true ;
            }
            else
            {
                endColumnControls =printedTable .Columns .Count ;
            }
            y = y + rowOfUpDistance + prtTextFont.Height + rowOfDownDistance;
            ev.Graphics.DrawLine(pen, left, y, X, y);
            //打印数据
            for ( i = curdgi; i < printedTable .Rows.Count; i++)
			{
			     X=left ;
                for (Int32 j =startColumnControls; j <endColumnControls; j++)
			    {
			         ev.Graphics .DrawString (printedTable .Rows [i][j].ToString ().Trim (),prtTextFont ,Brushes .Black ,X,y+rowOfUpDistance );
                    X+=width [j];
			    }
                y+=rowOfUpDistance +prtTextFont .Height +rowOfDownDistance ;
                ev.Graphics .DrawLine(pen,left,y,X,y);
                if(y>pWidth -prtTextFont .Height -400)
                {
                    break ;
                }
			}
            ev.Graphics .DrawLine(pen,left ,rowOfTop ,left,y);
            X=left ;
            for (Int32  k = startColumnControls ; k < endColumnControls ; k++)
			{
			     X+=width [k];
                ev.Graphics .DrawLine (pen,X,rowOfTop ,X ,y);
			}
            if(y>pWidth -prtTextFont .Height -400)
            {
                pIndex ++;
                if (0==startColumnControls )
                {
                    curdgi =i+1;
                }
                if(!ev.HasMorePages )
                {
                   endColumnControls =0;
                }
                ev.HasMorePages =true ;
            }
        }
    
    }
}
